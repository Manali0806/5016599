SQL> SELECT * FROM LOANS;

    LOANID CUSTOMERID LOANAMOUNT INTERESTRATE STARTDATE ENDDATE                 
---------- ---------- ---------- ------------ --------- ---------               
         1          1       5000            5 04-AUG-24 04-AUG-29               

SQL> 
SQL> SET SERVEROUTPUT ON;
SQL> CREATE OR REPLACE FUNCTION CALCULATEMONTHLYINSTALLMENT(
  2      P_LOAN_AMOUNT IN NUMBER,
  3      P_INTEREST_RATE IN NUMBER,
  4      P_LOAN_DURATION_YEARS IN NUMBER
  5  ) RETURN NUMBER IS
  6      V_MONTHLY_RATE NUMBER;
  7      V_NUM_PAYMENTS NUMBER;
  8      V_MONTHLY_INSTALLMENT NUMBER;
  9  BEGIN
 10      V_MONTHLY_RATE := P_INTEREST_RATE / 12 / 100;
 11      V_NUM_PAYMENTS := P_LOAN_DURATION_YEARS * 12;
 12      IF V_MONTHLY_RATE = 0 THEN
 13          V_MONTHLY_INSTALLMENT := P_LOAN_AMOUNT / V_NUM_PAYMENTS;
 14      ELSE
 15          V_MONTHLY_INSTALLMENT := P_LOAN_AMOUNT * V_MONTHLY_RATE / (1 - POWER(1 + V_MONTHLY_RATE, -V_NUM_PAYMENTS));
 16      END IF;
 17      RETURN V_MONTHLY_INSTALLMENT;
 18  END CALCULATEMONTHLYINSTALLMENT;
 19  /

Function created.

SQL> 
SQL> SET SERVEROUTPUT ON;
SQL> DECLARE
  2      CURSOR LOAN_CUR IS SELECT * FROM LOANS;
  3      V_DATA LOANS%ROWTYPE;
  4      V_DURATION NUMBER;
  5      V_MONTHLYINSTALLMENT NUMBER;
  6  BEGIN
  7      OPEN LOAN_CUR;
  8      LOOP
  9          FETCH LOAN_CUR INTO V_DATA;
 10          EXIT WHEN LOAN_CUR%NOTFOUND;
 11  
 12          V_DURATION := TRUNC((V_DATA.ENDDATE - V_DATA.STARTDATE)/365);
 13          V_MONTHLYINSTALLMENT :=  TRUNC(CALCULATEMONTHLYINSTALLMENT(V_DATA.LOANAMOUNT, V_DATA.INTERESTRATE, V_DURATION),2);
 14          DBMS_OUTPUT.PUT_LINE('CUSTOMER ID : ' || V_DATA.CUSTOMERID || ' MONTHLY INSTALLAMENT : ' || V_MONTHLYINSTALLMENT);
 15  
 16      END LOOP;
 17      CLOSE LOAN_CUR;
 18  END;
 19  /
CUSTOMER ID : 1 MONTHLY INSTALLAMENT : 94.35                                    

PL/SQL procedure successfully completed.

SQL> SPOOL OFF
